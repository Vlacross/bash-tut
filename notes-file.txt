Following Bash tutorial @ https://linuxconfig.org/bash-scripting-tutorial-for-beginners
__________________________________________________________



make script executable by running "chmod +x <filename>" 

stdin = standard input
stdout = standard output
stderr = standard error response

directing output to a txt file using ">"
    direct stderr = "2> err.txt"
    direct stdout and stf err = "&> both.txt"
_________________________________________________________

optimize terminal efficiency by building scripts in their own files unless you need shell scope.
Script files operate in a subshell which gives them a different scope (like a child parent realtionship)
So certain commands like 'cd' change the directory on the subshell, but no in the real-time shell you run the command in.

for my "make directory and change into" script, I implanted into my bashrc file, though only to escape the scope restriction.
__________________________________________________________

Basic tar commands:

-can use gunzip to unzip a common compressed file

tar
	-f flag always goes at end of flags followed by the file being referred

	-t = to list files in archive 
	  (tar -tf /PathToArchive file/Within/archive-if-only-need-one)
	-x = extract
	 (tar -xf /PathToArchiv) to extract in current dir
	 (tar -xf /pathToArchive -C /otherDirectory single/fileInArchive)
	
	white-space in file-names can be ignored with single quote surrounding 
	or by ingoring the spaces with `\` 
__________________________________________________________


make sure to use spaces inside square-brackets expressions to avoid syntactical errors

"echo $?" = returns exit status of last command

(exit status) - https://bash.cyberciti.biz/guide/The_exit_status_of_a_command



    

